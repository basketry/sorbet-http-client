# This code was generated by @basketry/sorbet-http-client@{{version}}
#
# Changes to this file may cause incorrect behavior and will be lost if
# the code is regenerated.
#
# To make changes to the contents of this file:
# 1. Edit source/path.ext
# 2. Run the Basketry CLI
#
# About Basketry: https://github.com/basketry/basketry/wiki
# About @basketry/sorbet-http-client: https://github.com/basketry/sorbet-http-client#readme

# frozen_string_literal: true

module BasketryExample
  module ControllerHelpers
    def map_dto_to_gizmo(dto)
      BasketryExample::V1::Types::Gizmo.new(
        id: dto['id'],
        name: dto['name'],
        size: map_dto_to_product_size(dto['size'])
      )
    rescue StandardError
      dto
    end

    def map_gizmo_to_dto(gizmo)
      {
        'id': gizmo.id,
        'name': gizmo.name,
        'size': map_product_size_to_dto(gizmo.size),
      }.compact
    rescue StandardError
      gizmo
    end

    def map_dto_to_widget(dto)
      BasketryExample::V1::Types::Widget.new(
        id: dto['id'],
        name: dto['name'],
        fiz: dto['fiz'].is_a?(String) ? Float(dto['fiz']) : dto['fiz'],
        buzz: dto['buzz'].is_a?(String) ? Float(dto['buzz']) : dto['buzz'],
        fizbuzz: dto['fizbuzz'].is_a?(String) ? Float(dto['fizbuzz']) : dto['fizbuzz'],
        foo: map_dto_to_widget_foo(dto['foo']),
        size: map_dto_to_product_size(dto['size'])
      )
    rescue StandardError
      dto
    end

    def map_widget_to_dto(widget)
      {
        'id': widget.id,
        'name': widget.name,
        'fiz': widget.fiz,
        'buzz': widget.buzz,
        'fizbuzz': widget.fizbuzz,
        'foo': map_widget_foo_to_dto(widget.foo),
        'size': map_product_size_to_dto(widget.size),
      }.compact
    rescue StandardError
      widget
    end

    def map_dto_to_new_widget(dto)
      BasketryExample::V1::Types::NewWidget.new(
        name: dto['name'],
        fiz: dto['fiz'].is_a?(String) ? Float(dto['fiz']) : dto['fiz'],
        buzz: dto['buzz'].is_a?(String) ? Float(dto['buzz']) : dto['buzz'],
        fizbuzz: dto['fizbuzz'].is_a?(String) ? Float(dto['fizbuzz']) : dto['fizbuzz'],
        foo: map_dto_to_new_widget_foo(dto['foo']),
        size: map_dto_to_product_size(dto['size'])
      )
    rescue StandardError
      dto
    end

    def map_new_widget_to_dto(new_widget)
      {
        'name': new_widget.name,
        'fiz': new_widget.fiz,
        'buzz': new_widget.buzz,
        'fizbuzz': new_widget.fizbuzz,
        'foo': map_new_widget_foo_to_dto(new_widget.foo),
        'size': map_product_size_to_dto(new_widget.size),
      }.compact
    rescue StandardError
      new_widget
    end

    def map_dto_to_gizmos_response(dto)
      BasketryExample::V1::Types::GizmosResponse.new(
        data: dto['data']&.map { |item| map_dto_to_gizmo(item) }
      )
    rescue StandardError
      dto
    end

    def map_gizmos_response_to_dto(gizmos_response)
      {
        'data': gizmos_response.data&.map { |item| map_gizmo_to_dto(item) },
      }.compact
    rescue StandardError
      gizmos_response
    end

    def map_dto_to_create_widget_body(dto)
      BasketryExample::V1::Types::CreateWidgetBody.new(
        name: dto['name']
      )
    rescue StandardError
      dto
    end

    def map_create_widget_body_to_dto(create_widget_body)
      {
        'name': create_widget_body.name,
      }.compact
    rescue StandardError
      create_widget_body
    end

    def map_dto_to_exhaustive_params_body(dto)
      BasketryExample::V1::Types::ExhaustiveParamsBody.new(
        foo: dto['foo'],
        bar: dto['bar']
      )
    rescue StandardError
      dto
    end

    def map_exhaustive_params_body_to_dto(exhaustive_params_body)
      {
        'foo': exhaustive_params_body.foo,
        'bar': exhaustive_params_body.bar,
      }.compact
    rescue StandardError
      exhaustive_params_body
    end

    def map_dto_to_widget_foo(dto)
      BasketryExample::V1::Types::WidgetFoo.new(
        fiz: dto['fiz'].is_a?(String) ? Float(dto['fiz']) : dto['fiz'],
        buzz: dto['buzz'].is_a?(String) ? Float(dto['buzz']) : dto['buzz']
      )
    rescue StandardError
      dto
    end

    def map_widget_foo_to_dto(widget_foo)
      {
        'fiz': widget_foo.fiz,
        'buzz': widget_foo.buzz,
      }.compact
    rescue StandardError
      widget_foo
    end

    def map_dto_to_new_widget_foo(dto)
      BasketryExample::V1::Types::NewWidgetFoo.new(
        fiz: dto['fiz'].is_a?(String) ? Float(dto['fiz']) : dto['fiz'],
        buzz: dto['buzz'].is_a?(String) ? Float(dto['buzz']) : dto['buzz']
      )
    rescue StandardError
      dto
    end

    def map_new_widget_foo_to_dto(new_widget_foo)
      {
        'fiz': new_widget_foo.fiz,
        'buzz': new_widget_foo.buzz,
      }.compact
    rescue StandardError
      new_widget_foo
    end

    def map_dto_to_create_gizmo_size(dto)
      BasketryExample::V1::Enums::CreateGizmoSize.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_create_gizmo_size_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_query_enum(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsQueryEnum.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_query_enum_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_query_enum_array(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsQueryEnumArray.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_query_enum_array_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_path_enum(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsPathEnum.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_path_enum_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_path_enum_array(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsPathEnumArray.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_path_enum_array_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_header_enum(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsHeaderEnum.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_header_enum_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_exhaustive_params_header_enum_array(dto)
      BasketryExample::V1::Enums::ExhaustiveParamsHeaderEnumArray.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_exhaustive_params_header_enum_array_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end

    def map_dto_to_product_size(dto)
      BasketryExample::V1::Enums::ProductSize.deserialize(dto)
    rescue StandardError
      dto
    end

    def map_product_size_to_dto(enum)
      enum&.serialize
    rescue StandardError
      enum
    end
  end
end
